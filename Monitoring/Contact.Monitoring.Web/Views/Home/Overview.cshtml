@using Kendo.Mvc
@model Contact.Monitoring.ViewModel.OverviewViewModel

@{
    ViewBag.Title = "Overview";
}

<hgroup class="title">
    <h1>@ViewBag.Title</h1>
</hgroup>

<div class="container-fluid">
    <div class="row"><p /></div>
    <div class="row">
        @if (Model.LastAddressBookUpdate != null)
        {
            <h3>AddressBook entries <span> <b> @Model.LastAddressBookUpdate.Count</b></span> <span>(@Model.LastAddressBookUpdate.LastUpdatedDateTime)</span></h3>
        }
    </div>
    <div class="row"><p /></div>
    <div class="row">
        <h3>Server 
            @if (Model.Servers.Status)
            {
                <i class="glyphicon glyphicon-ok"></i>
            }
            else
            {
                <i class="glyphicon glyphicon-remove-sign"></i>
            }
        </h3>
        @foreach (var description in Model.Servers.Description)
        {
            <h4>@description</h4>
        }
        @if (Model.SystemDiskSpaceViolations.Any())
        {
            <p><b>Servers with disk free space violations</b></p>
            @(Html.Kendo().Grid(Model.SystemDiskSpaceViolations)
                                      .Name("kSystemDiskSpaceViolations")
                                      .Columns(columns =>
                                      {
                                          columns.Bound(c => c.MachineName);
                                          columns.Bound(c => c.Service);
                                          columns.Bound(c => c.Drive);
                                          columns.Bound(c => c.Size).Title("Size (GB)");
                                          columns.Bound(c => c.FreeSpace).Title("FreeSpace (GB)");
                                      })
                                    .Pageable()
                                    .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(4)
                                        .ServerOperation(false))
            )
        }
        @if (Model.ServersNotContactable.Any())
        {
            <p><b>Servers not contactable</b></p>
            @(Html.Kendo().Grid(Model.ServersNotContactable)
                                      .Name("kServersNotContactable")
                                      .Columns(columns =>
                                      {
                                          columns.Bound(c => c.MachineName);
                                          columns.Bound(c => c.Service);
                                          columns.Bound(c => c.LastUpdatedDateTime).Title("Last Contacted");
                                      })
                                        .Pageable()
                                        .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .PageSize(4)
                                            .ServerOperation(false))
            )
        }
        
        @if (Model.ServicesNotRunning.Any())
        {
            <p><b>Services not running</b></p>
            @(Html.Kendo().Grid(Model.ServicesNotRunning)
                                           .Name("kServicesNotRunning")
                                          .Columns(columns =>
                                          {
                                              columns.Bound(c => c.MachineName);
                                              columns.Bound(c => c.Service);
                                              columns.Bound(c => c.LastUpdatedDateTime);
                                              columns.Bound(c => c.Status);
                                              columns.Bound(c => c.Instance);
                                          })
                                          .Pageable()
                                          .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .PageSize(4)
                                            .ServerOperation(false))
            )
        }

    </div>
    <div class="row">
        <h3>Health 
            @if (Model.Health.Status)
            {
                <span class="glyphicon glyphicon-ok"></span>
            }
            else
            {
                <span class="glyphicon glyphicon-remove-sign"></span>
            }
        </h3>
        @foreach (var description in Model.Health.Description)
        {
            <h4>@description</h4>
        }
        @if (Model.CpuThresholdViolations.Any())
        {
            <p><b>CPU Threshold violations</b></p>
            @(Html.Kendo().Grid(Model.CpuThresholdViolations)
                                      .Name("kCpuThresholdViolations")
                                      .Columns(columns =>
                                      {
                                          columns.Bound(c => c.MachineName);
                                          columns.Bound(c => c.Service);
                                          columns.Bound(c => c.CounterValue).Title("CPU Usage (%)");
                                      })
                                        .Pageable()
                                        .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .PageSize(4)
                                            .ServerOperation(false))
            )
        }
        @if (Model.MemoryThresholdViolations.Any())
        {
            <p><b>Memory Threshold violations</b></p>
            @(Html.Kendo().Grid(Model.MemoryThresholdViolations)
                                      .Name("kMemoryThresholdViolations")
                                      .Columns(columns =>
                                      {
                                          columns.Bound(c => c.MachineName);
                                          columns.Bound(c => c.Service);
                                          columns.Bound(c => c.Counter);
                                          columns.Bound(c => c.CounterValue);
                                      })
                                    .Pageable()
                                    .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(4)
                                        .ServerOperation(false))
            )
        }
        @if (Model.PendingScheduleMessages.Any())
        {
            <p><b>Pending scheduler messages</b></p>
            @(Html.Kendo().Grid(Model.PendingScheduleMessages)
                                          .Name("kPendingScheduleMessages")
                                      .Columns(columns =>
                                      {
                                          columns.Bound(c => c.LastUpdatedDateTime);
                                          columns.Bound(c => c.PendingFrom);
                                          columns.Bound(c => c.QueueCount);
                                      })
                                        .Pageable()
                                        .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .PageSize(4)
                                            .ServerOperation(false))
            )
        }
    </div>
    <div class="row"><p /></div>
    <div class="row">
        <h3> Throughput </h3>
            @(Html.Kendo().Grid(Model.ServiceOverview)
              .Name("kServiceOverview")
              .Columns(columns =>
              {
                  columns.Bound(c => c.Category);
                  columns.Bound(c => c.ThroughputAverage);
                  columns.Bound(c => c.ThroughputMax);
                  columns.Bound(c => c.LastTimeItRan);
                  columns.Bound(c => c.Total);
              })
              .DataSource(dataSource => dataSource
                  .Ajax()
                  .PageSize(4)
                  .ServerOperation(false))
            )
</div>

</div>