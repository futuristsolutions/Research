@using Contact.Monitoring.Web.Controllers
@using Contact.Monitoring.Web.ViewModel
@{
    ViewBag.Title = "Monitoring";
}
<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
</hgroup>

<div class="container-fluid">
    <div class="row"><p /></div>
    <div class="row">
        <div class="col-lg-6">
            @(Html.Kendo().Grid<SystemUpTimeViewModel>()
                  .Name("kSystemUpTime")
                  .Columns(columns =>
                  {
                      columns.Bound(c => c.MachineName);
                      columns.Bound(c => c.Service);
                      columns.Bound(c => c.LastBootUpTime);
                  })
                  .AutoBind(true)
                  .DataSource(ds =>
                      ds.Ajax()
                          .Read(read => read.Action("GetSystemUpTime", "DataProvider")))
                  )
        </div>
        
        <div class="col-lg-6">
            @(Html.Kendo().Grid<PerformanceCounterDataViewModel>()
                  .Name("kSchedulerStatus")
                  .Columns(columns =>
                  {
                      columns.Bound(c => c.TimestampString);
                      columns.Bound(c => c.MachineName);
                      columns.Bound(c => c.Counter);
                      columns.Bound(c => c.CounterValue);
                  })
                  .AutoBind(true)
                  .DataSource(ds =>
                      ds.Ajax()
                          .Read(read => read.Action("GetSchedulerStatus", "DataProvider")))
                  )
        </div>
    </div>
    <div class="row"><p/></div>
    <div class="row">
        <div class="col-lg-12">
            @(Html.Kendo().Grid<PerformanceCounterDataViewModel>()
                  .Name("kAllSystemStatus")
                  .Scrollable()
                  .Columns(columns =>
                  {
                      columns.Bound(c => c.TimestampString);
                      columns.Bound(c => c.MachineName);
                      columns.Bound(c => c.Service);
                      columns.Bound(c => c.Counter);
                      columns.Bound(c => c.CounterValue);
                  })
                  .AutoBind(true)
                  .DataSource(ds =>
                      ds.Ajax()
                          .Read(read => read.Action("GetAllSystemStatus", "DataProvider")))
                  )
        </div>
    </div>
    <div class="row"><p /></div>
    <div class="row">
        @(Html.Kendo().Chart<PerformanceCounterDataViewModel>()
              .Name("chart-cpuusage")
              .Title("%CPU Usage")
              .Legend(legend => legend
                  .Position(ChartLegendPosition.Bottom)
              )
              .ChartArea(chartArea => chartArea
                  .Background("transparent")
              )
              .SeriesDefaults(seriesDefaults =>
                  seriesDefaults.Line().Style(ChartLineStyle.Smooth)
              )
              .DataSource(ds => ds.Read(read => read.Action("GetCounterValues", "DataProvider", new { counter = "% processor time" })))
              .Series(series =>
              {
                  series.Line(model => model.CounterValue).Name("%cpu usage");
              })
              .CategoryAxis(axis => axis
                  .Categories(model => model.TimestampString)
                  .MajorGridLines(lines => lines.Visible(false))
                  .Labels(labels => labels.Rotation(-90))
              )
              .ValueAxis(axis => axis
                  .Numeric().Labels(labels => labels.Format("{0}%"))
                  .Line(line => line.Visible(false))
              )
              .Tooltip(tooltip => tooltip
                  .Visible(true)
                  .Format("{0}%")
              )
              )

        
        
    </div>
    <div class="row"><p /></div>
    <div class="row">
        @(Html.Kendo().Chart<PerformanceCounterDataViewModel>()
        .Name("chart-memoryusage")
        .Title("Memory Usage")
        .Legend(legend => legend
            .Position(ChartLegendPosition.Bottom)
        )
        .ChartArea(chartArea => chartArea
            .Background("transparent")
        )
        .SeriesDefaults(seriesDefaults =>
            seriesDefaults.Line().Style(ChartLineStyle.Smooth)
        )
        .DataSource(ds => ds.Read(read => read.Action("GetCounterValues", "DataProvider", new { counter = "available mbytes" })))
        .Series(series =>
        {
            series.Line(model => model.CounterValue).Name("Memory usage");
        })
        .CategoryAxis(axis => axis
            .Categories(model => model.TimestampString)
            .MajorGridLines(lines => lines.Visible(false))
            .Labels(labels => labels.Rotation(-90))
        )
        .ValueAxis(axis => axis
            .Numeric().Labels(labels => labels.Format("{0} Mbytes"))
            .Line(line => line.Visible(false))
        )
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Format("{0} Mbytes")
        )
        )

    </div>
    
    <div class="row"><p /></div>
    <div class="row">
        @(Html.Kendo().Chart<PerformanceCounterDataViewModel>()
        .Name("chart-notification")
        .Title("Notification")
        .Legend(legend => legend
            .Position(ChartLegendPosition.Bottom)
        )
        .ChartArea(chartArea => chartArea
            .Background("transparent")
        )
        .SeriesDefaults(seriesDefaults =>
            seriesDefaults.Line().Style(ChartLineStyle.Smooth)
        )
        .DataSource(ds => ds.Read(read => read.Action("GetCounterValues", "DataProvider", new { counter = "requests served" })))
        .Series(series =>
        {
            series.Line(model => model.CounterValue).Name("Notifications");
        })
        .CategoryAxis(axis => axis
            .Categories(model => model.TimestampString)
            .MajorGridLines(lines => lines.Visible(false))
            .Labels(labels => labels.Rotation(-90))
        )
        .ValueAxis(axis => axis
            .Numeric().Labels(labels => labels.Format("{0}"))
            .Line(line => line.Visible(false))
        )
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Format("{0}")
        )
        )

    </div>
    <div class="row"><p /></div>
    <div class="row">
        <div class="col-lg-12">
            @(Html.Kendo().Grid<PerformanceCounterDataViewModel>()
                  .Name("kPerformanceData")
                  .Pageable()
                  .Columns(columns =>
                  {
                      columns.Bound(c => c.TimestampString);
                      columns.Bound(c => c.MachineName);
                      columns.Bound(c => c.Service);
                      columns.Bound(c => c.Counter);
                      columns.Bound(c => c.CounterValue);
                  })
                  .AutoBind(true)
                  .DataSource(ds =>
                      ds.Ajax()
                          .Read(read => read.Action("GetSystemActivity", "DataProvider")))
                  )
        </div>
    </div>
</div>
